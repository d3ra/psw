/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main_package;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.LinkedList;
import javax.swing.table.DefaultTableModel;
import static main_package.Media.SEPARATOR;
import static main_package.Repository.COLLECTIONS_PATH;

/**
 *
 * @author mich
 */
public class ShowCollectionsDialog extends javax.swing.JDialog {

    private Repository repository;
    private LinkedList<Media> mediaList;

    /**
     * Creates new form ShowCollectionsDialog
     */
    public ShowCollectionsDialog(java.awt.Frame parent, boolean modal, Repository repository) {
        super(parent, modal);
        initComponents();
        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        setVisible(false);
                    }
                });
            }
        });
        this.repository = repository;
        this.mediaList = repository.getAll();
        fillTable();
    }

    private void fillTable() {
        // leggo il file collections
        // per ogni riga scorro la lista dei media e conto quanti hanno id come l'id della riga
        try {
            BufferedReader br = new BufferedReader(new FileReader(new File(COLLECTIONS_PATH + "/collections")));
            String line = br.readLine();
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            while (line != null) {
                String[] split = line.split(SEPARATOR);
                int id = Integer.parseInt(split[0]);
                String name = split[1];
                String type = split[2];
                int numElem = 0;
                for (Media media : mediaList) {
                    if (media.getIdCollezione() == id) {
                        numElem++;
                    }
                }
                // crea una linea della tabella
                if (numElem > 0 || id == 0) {
                    dtm.addRow(new Object[]{id, name, type, numElem});
                }
                line = br.readLine();
            }
            br.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public LinkedList<Media> getData() {
        return mediaList;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Collections List");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Type", "# of Elements"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(20);
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Select");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 707, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // prende la riga selezionata
        // prende l'id
        //(se la riga restituisce -1, return)
        // cerca tutti i media con idCollezione uguale e li mette in una lista che salva in medialist
        int rowIndex = jTable1.getSelectedRow();
        if (rowIndex == - 1) {
            return;
        }
        int id = (int) jTable1.getModel().getValueAt(rowIndex, 0);
        String name = (String) jTable1.getModel().getValueAt(rowIndex, 1);
        String type = (String) jTable1.getModel().getValueAt(rowIndex, 2);
        int numElem = (int) jTable1.getModel().getValueAt(rowIndex, 3);
        if (numElem == 0) {
            return;
        }
        LinkedList<Media> support = new LinkedList<Media>();
        for (Media media : mediaList) {
            if (media.getIdCollezione() == id) {
                support.add(media);
            }
        }
        mediaList = support;
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
