/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main_package;

import java.util.LinkedList;
import javax.swing.DefaultListModel;

/**
 *
 * @author mich
 */
public class NewCollectionDialog extends javax.swing.JDialog {

    private static LinkedList<Media> newMediaList;
    private Repository repository;

    /**
     * Creates new form NewCollectionDialog
     */
    public NewCollectionDialog(java.awt.Frame parent, boolean modal, Repository repository) {
        super(parent, modal);
        initComponents();
        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        setVisible(false);
                    }
                });
                //setVisible(true);
            }
        });
        this.repository = repository;
        newMediaList = repository.getAll();
        jList1.setModel(new DefaultListModel());
        jList2.setModel(new DefaultListModel());
        DefaultListModel dlm = (DefaultListModel) jList1.getModel();
        for (Media media : newMediaList) {
            dlm.addElement(media.getTitolo());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Create new Collection");

        jLabel2.setText("Name:");

        jTextField1.setText("Collection name");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ALL", "Film", "Ebook", "Audio" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Type:");

        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jList1);

        jList2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(jList2);

        jButton1.setText("Move >>");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("<< Move");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("SAVE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel4.setText("Available medias");

        jLabel5.setText("In collection medias");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))))
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel5)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (jList1.getSelectedIndex() == -1) {
            return;
        }
        DefaultListModel dlm1 = (DefaultListModel) jList1.getModel();
        DefaultListModel dlm2 = (DefaultListModel) jList2.getModel();
        dlm2.addElement(dlm1.getElementAt(jList1.getSelectedIndex()));
        dlm1.remove(jList1.getSelectedIndex());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (jList2.getSelectedIndex() == -1) {
            return;
        }
        DefaultListModel dlm1 = (DefaultListModel) jList1.getModel();
        DefaultListModel dlm2 = (DefaultListModel) jList2.getModel();
        dlm1.addElement(dlm2.getElementAt(jList2.getSelectedIndex()));
        dlm2.remove(jList2.getSelectedIndex());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // se in jlist2 ci sono elementi
        DefaultListModel dlm2 = (DefaultListModel) jList2.getModel();
        if (dlm2.isEmpty()) {
            return;
        }
        LinkedList<Media> result = new LinkedList<Media>();
        // prendo gli oggetti con quei nome e gli cambio il numero di collezione
        int collectionId = repository.getNextCollectionId();
        for (Media media : newMediaList) {
            for (Object name : dlm2.toArray()) {
                String title = (String) name;
                if (media.getTitolo().equalsIgnoreCase(title)) {
                    media.setIdCollezione(collectionId);
                    result.add(media);
                }
            }
        }
        // aggiungo una collezione nel file collections
        String collectionName = jTextField1.getText();
        if (collectionName.equals("")) {
            collectionName = "noName";
        }
        repository.createNewCollection(collectionName, collectionId, jComboBox1.getSelectedItem().toString());
        // ritorno i file a Main
        newMediaList = result;
        setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // voglio cambiare la lista di elementi disponibili
        String type = jComboBox1.getSelectedItem().toString();
        DefaultListModel dlm1 = (DefaultListModel) jList1.getModel();
        DefaultListModel dlm2 = (DefaultListModel) jList2.getModel();
        switch (type) {
            case "ALL": {
                dlm1.clear();
                newMediaList = repository.getAll();
                for (Media media : newMediaList) {
                    dlm1.addElement(media.getTitolo());
                }
            }
            break;
            case "Film": {
                dlm1.clear();
                newMediaList = repository.getMedias("films");
                LinkedList<Media> temp = new LinkedList<Media>();
                // aggiungo tutti i film nella lista 1, e tolgo tutti i non film dalla lista 2
                for (Media media : newMediaList) {
                    dlm1.addElement(media.getTitolo());
                }
                for (Media media : newMediaList) {
                    for (Object name : dlm2.toArray()) {
                        String title = (String) name;
                        if (media.getTitolo().equalsIgnoreCase(title)) {
                            temp.add(media);
                        }
                    }
                }
                dlm2.clear();
                for (Media media : temp) {
                    dlm2.addElement(media.getTitolo());
                }
            }
            break;
            case "Ebook": {
                dlm1.clear();
                newMediaList = repository.getMedias("ebooks");
                LinkedList<Media> temp = new LinkedList<Media>();
                // aggiungo tutti i film nella lista 1, e tolgo tutti i non film dalla lista 2
                for (Media media : newMediaList) {
                    dlm1.addElement(media.getTitolo());
                }
                for (Media media : newMediaList) {
                    for (Object name : dlm2.toArray()) {
                        String title = (String) name;
                        if (media.getTitolo().equalsIgnoreCase(title)) {
                            temp.add(media);
                        }
                    }
                }
                dlm2.clear();
                for (Media media : temp) {
                    dlm2.addElement(media.getTitolo());
                }
            }
            break;
            case "Audio": {
                dlm1.clear();
                newMediaList = repository.getMedias("audio");
                LinkedList<Media> temp = new LinkedList<Media>();
                // aggiungo tutti i film nella lista 1, e tolgo tutti i non film dalla lista 2
                for (Media media : newMediaList) {
                    dlm1.addElement(media.getTitolo());
                }
                for (Media media : newMediaList) {
                    for (Object name : dlm2.toArray()) {
                        String title = (String) name;
                        if (media.getTitolo().equalsIgnoreCase(title)) {
                            temp.add(media);
                        }
                    }
                }
                dlm2.clear();
                for (Media media : temp) {
                    dlm2.addElement(media.getTitolo());
                }
            }
            break;
        }


    }//GEN-LAST:event_jComboBox1ActionPerformed

    public LinkedList<Media> getData() {
        return newMediaList;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
